worker_processes 1;

events { worker_connections 1024; }

http {
    # FINAL CORRECTED Log Format Definition:
    # Uses $upstream_addr TWICE: once for address (standard), once for the "Pool Data" field.
    # The Python script will use the IP from the second $upstream_addr to infer the pool.
    log_format custom_b_g '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '$request_time $upstream_response_time '
                          '$upstream_addr $upstream_status '
                          '$upstream_addr -'; # <-- $upstream_addr used for 'Pool Data' field

    upstream backend {
        server app_blue:80 max_fails=2 fail_timeout=5s;
        server app_green:80 backup;
    }

    server {
        listen 80;

        # Apply the corrected log format
        access_log /var/log/nginx/access.log custom_b_g;

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
            proxy_connect_timeout 2s;
            proxy_read_timeout 5s;
        }
    }
}