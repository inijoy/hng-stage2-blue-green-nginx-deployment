services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - app_blue
      - app_green
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # ðŸŽ¯ ADDED: Mount the shared volume to access the log file
      - nginx_logs:/var/log/nginx
    command: /bin/bash -c "nginx -g 'daemon off;'"

  app_blue:
    image: yimikaade/wonderful:devops-stage-two
    container_name: app_blue
    environment:
      - RELEASE_ID=${RELEASE_ID_BLUE}
      - APP_POOL=blue
      - PORT=80
    ports:
      - "8081:80"

  app_green:
    image: yimikaade/wonderful:devops-stage-two
    container_name: app_green
    environment:
      - RELEASE_ID=${RELEASE_ID_GREEN}
      - APP_POOL=green
      - PORT=80
    ports:
      - "8082:80"

  # ðŸ†• ADDED: New service for log monitoring and alerting
  alert_watcher:
    build:
      context: .
      dockerfile: Dockerfile.watcher
    container_name: alert_watcher
    restart: on-failure
    # Load all Slack and configuration variables
    env_file:
      - .env
    volumes:
      # ðŸŽ¯ ADDED: Mount the shared volume to read the access.log
      - nginx_logs:/var/log/nginx
      # Mount the log-watcher script (assuming it's in the project root)
      - ./log_watcher.py:/app/log_watcher.py
    # This command will be defined in the Dockerfile.watcher or explicitly here
    command: ["python", "/app/log_watcher.py"]

# ðŸ“Œ ADDED: Volume definition for persistence and sharing
volumes:
  nginx_logs:







